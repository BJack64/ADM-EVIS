@using eFakturADM.Logic.Collections
@using eFakturADM.Web.Helpers
@using eFakturADM.Web.Models

@{
    ViewBag.Title = "Create Surat Pemberitahuan Masa (SPM)";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var monthList = GlobalFunctionHelper.GetMasaPajakOpenList();
    var yearList = new List<SelectListItem>();

    LoginResult _loginResult = (LoginResult)Session["Login"];
    var roleActivities_download = RoleActivities.GetByActivityId_RoleId_Auth("61", _loginResult.RoleId[0]);
    var check_download = roleActivities_download.Count != 0;

    List<SelectListItem> listManualLookup = new List<SelectListItem>();
    listManualLookup.Add(new SelectListItem { Text = "Normal", Value = "normal", Selected = true });
    listManualLookup.Add(new SelectListItem { Text = "Pembetulan", Value = "pembetulan" });

}
<div class="page-head">
    <div class="page-title">
        <h1>
            Create Surat Pemberitahuan Masa (SPM)
        </h1>
    </div>
</div>
<!-- BEGIN EXAMPLE TABLE PORTLET-->
<div class="portlet light">
    <div class="portlet">
        <div class="portlet-body">
            <div class="form-group padding-bottom-10">
                <div class="form-group padder row">
                    <div class="col-md-6">
                        <div class="row form-group">
                            <label class="col-md-3 control-label">&nbsp;</label>
                            <div class="col-md-9">
                                <div class="radio-list">
                                    <div>
                                        @for (int i = 0; i < listManualLookup.Count; i++)
                                        {
                                            <label class="radios">
                                                <span>
                                                    @Html.RadioButton("manuallookup", @listManualLookup[i].Value, @listManualLookup[i].Selected, new { id = @listManualLookup[i].Value })
                                                </span>
                                                @listManualLookup[i].Text
                                            </label>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group padder row">
                    <div class="col-md-6">
                        <div class="row form-group">
                            <label class="col-md-3 control-label">Tax Period</label>
                            <div class="col-md-9">
                                @Html.DropDownList("input-search-masapajak", monthList, new { @class = "form-control w-sm", @id = "input-search-masapajak" })
                            </div>
                        </div>
                    </div>
                    
                </div>
                <div class="form-group padder row">
                    <div class="col-md-6">
                        <div class="row form-group">
                            <label class="col-md-3 control-label">Tahun</label>
                            <div class="col-md-9">
                                @Html.DropDownList("input-search-tahunpajak", yearList, new { @class = "form-control w-sm", @id = "input-search-tahunpajak" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="" style="text-align:right">
                        <div class="m-t-xs">
                            <button type="button" class="btn btn-success" id="btn-search">
                                Search
                            </button>
                            <button type="button" class="btn btn-default" id="btn-reset">
                                Reset
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div style="padding:5px; margin:0 4px; border:1px solid #c0c0c0;">
                    <div class="col-md-6">
                        <div class="row form-group">
                            <label class="control-label bold">PT Astra Daihatsu Motor</label>
                        </div>
                        <div class="row form-group">
                            <label class="control-label bold">Summary TAX VAT IN</label>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-5 control-label" style="padding-left:0">Pembetulan Ke</label>
                            <div class="col-md-6">
                                <input type="text" class="form-control w-xss" id="input-searchresult-pembetulanke" readonly="readonly" />
                            </div>
                        </div>
                        <div class="row form-group">
                            <label class="col-md-5 control-label" style="padding-left:0">Tax Period</label>
                            <div class="col-md-6">
                                <input type="text" class="form-control w-sm" id="input-searchresult-taxperiod" readonly="readonly" />
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable">
                        <table id="tbl-report-spm" class="tblheader table table-striped table-hover table-blue">
                            <thead>
                                <tr>
                                    <th rowspan="2">
                                        No
                                    </th>
                                    <th rowspan="2">
                                        Kode Jenis
                                    </th>
                                    <th rowspan="2" style="min-width:150px">
                                        Nomor FP
                                    </th>
                                    <th rowspan="2">
                                        Masa Pajak
                                    </th>
                                    <th rowspan="2">
                                        Tahun Pajak
                                    </th>
                                    <th rowspan="2" style="min-width:75px">
                                        Tanggal FP
                                    </th>
                                    <th colspan="3" style="text-align:center">
                                        Identitas Penjual
                                    </th>
                                    <th colspan="3" style="text-align:center">
                                        Identitas Pembeli
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Total DPP
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Total PPN
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Total PPnBM
                                    </th>
                                    <th rowspan="2" style="min-width:150px">
                                        Keterangan Tambahan
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        FG Uang Muka
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Uang Muka DPP
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Uang Muka PPN
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Uang Muka PPnBM
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Referensi
                                    </th>
                                    <th rowspan="2" style="min-width:100px">
                                        Filling Index
                                    </th>
                                </tr>
                                <tr>
                                    <th style="min-width:150px">
                                        NPWP Penjual
                                    </th>
                                    <th style="min-width:200px">
                                        Nama Penjual
                                    </th>
                                    <th style="min-width:200px">
                                        Alamat Penjual
                                    </th>
                                    <th style="min-width:150px">
                                        NPWP Pembeli
                                    </th>
                                    <th style="min-width:200px">
                                        Nama Pembeli
                                    </th>
                                    <th style="min-width:200px">
                                        Alamat Pembeli
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="input-group" style="text-align:left">
                        <div class="m-t-md">
                            @if (check_download)
                            {
                                <button type="button" class="btn btn-success" id="btn-create-spm">
                                    Create SPM
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        App.PreventDoubleSubmit();
        App.InitDatePicker();

        //FirstLoad
        var dRdType = $('input[name=manuallookup]:checked').val();
        var isOpen = dRdType == "normal";
        var selectedMonth = $('#input-search-masapajak option:selected').val();
        loadTahunPajak(selectedMonth, isOpen);

        $('#btn-search').click(function () {
            searchClick();
        });

        $('#btn-reset').click(function () {
            resetClick();
        });

        $('#btn-create-spm').click(function () {
            createSpm();
        });

        $('input[type=radio][name=manuallookup]').change(function () {
            if (this.value == "normal") {
                loadMasaPajak(true);
            } else if (this.value == "pembetulan") {
                loadMasaPajak(false);
            }
        });

        dataSpmToBind = [];

        var tbl = new ReportSpmTable();
        tbl.init();

    });

    var masaPajak;
    var tahunPajak;

    function createSpm() {
        masaPajak = $('#input-search-masapajak option:selected').val();
        tahunPajak = $('#input-search-tahunpajak option:selected').val();
        var msgs = '';
        if (masaPajak == '') {
            msgs = 'Masa Pajak Mandatory';
        }
        if (tahunPajak == '') {
            msgs = (msgs == '' ? '' : '<br />') + 'Tahun Pajak Mandatory';
        }

        if (msgs != '') {
            toastr.warning(msgs, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
        } else {
            var oData = JSON.stringify({ masaPajak: masaPajak, tahunPajak: tahunPajak });
            $.ajax({
                type: "POST",
                url: '@Url.Action("ValidationCreateSpm", "Spm")',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: oData,
                cache: false,
                success: function (response) {
                    switch (response.Html.InfoType) {
                        case 0:
                            toastr.info(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                            dialog.close();
                            break;
                        case 2:
                            toastr.warning(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                            break;
                        case 3:
                            toastr.error(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                            break;
                    }

                    if (response.Html.InfoType == 1) {
                        BootstrapDialog.show({
                            type: BootstrapDialog.TYPE_DANGER,
                            title: 'Submit Confirmation',
                            message: 'Are you sure want to Create SPM?',
                            buttons: [{
                                label: 'Yes',
                                cssClass: 'btn-danger btn-delay',
                                action: function (dialog) {
                                    dialog.close();
                                    submitCreateSpm();
                                }
                            }, {
                                label: 'No',
                                cssClass: 'btn-danger',
                                action: function (dialog) {
                                    dialog.close();
                                }
                            }]
                        });

                    }

                },
                error: function (xhr, textStatus, errorThrown) {
                    App.DialogError(xhr, textStatus, errorThrown);
                }
            });
        }
    }

    function submitCreateSpm() {

        masaPajak = $('#input-search-masapajak option:selected').val();
        tahunPajak = $('#input-search-tahunpajak option:selected').val();
        var oData = JSON.stringify({ masaPajak: masaPajak, tahunPajak: tahunPajak });

        $.ajax({
            type: "POST",
            url: '@Url.Action("SubmitCreateSpm", "Spm")',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            data: oData,
            cache: false,
            success: function (response) {
                switch (response.Html.InfoType) {
                    case 0:
                        toastr.info(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                        break;
                    case 1:
                        toastr.success(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                        break;
                    case 2:
                        toastr.warning(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                        break;
                    case 3:
                        toastr.error(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                        break;
                }

                resetClick();

            },
            error: function (xhr, textStatus, errorThrown) {
                App.DialogError(xhr, textStatus, errorThrown);
            }
        });
    }

    function resetClick() {

        $('#input-search-masapajak').val($('#input-search-masapajak option:first').val());

        $('#input-search-tahunpajak option:selected').val('');

        masaPajak = $('#input-search-masapajak option:selected').val();
        tahunPajak = $('#input-search-tahunpajak option:selected').val();

        $('#input-searchresult-pembetulanke').val('');
        $('#input-searchresult-taxperiod').val('');

        dataSpmToBind = [];

        var tbl = new ReportSpmTable();
        tbl.init();

    }

    function searchClick() {
        masaPajak = $('#input-search-masapajak option:selected').val();
        tahunPajak = $('#input-search-tahunpajak option:selected').val();
        var msgs = '';
        if (masaPajak == '') {
            msgs = 'Masa Pajak Mandatory';
        }
        if (tahunPajak == '') {
            msgs = (msgs == '' ? '' : '<br />') + 'Tahun Pajak Mandatory';
        }

        if (msgs != '') {
            toastr.warning(msgs, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
        } else {
            var oData = JSON.stringify({ masaPajak: masaPajak, tahunPajak: tahunPajak });
            $.ajax({
                type: "POST",
                url: '@Url.Action("ValidationSubmitSearchSpm", "Spm")',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: oData,
                cache: false,
                success: function (response) {
                    switch (response.Html.InfoType) {
                        case 0:
                            toastr.info(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                            break;
                        case 2:
                            toastr.warning(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                            break;
                        case 3:
                            toastr.error(response.Html.Message, "", { "positionClass": "toast-top-center", "showDuration": "30000" });
                            break;
                    }

                    if (response.Html.InfoType == 1) {
                        generateSubmitSearch();
                    }

                },
                error: function (xhr, textStatus, errorThrown) {
                    App.DialogError(xhr, textStatus, errorThrown);
                }
            });
        }
    }

    function generateSubmitSearch() {

        masaPajak = $('#input-search-masapajak option:selected').val();
        tahunPajak = $('#input-search-tahunpajak option:selected').val();

        //get spm info
        var oData = JSON.stringify({ masaPajak: masaPajak, tahunPajak: tahunPajak });
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetSpmInfo", "Spm")',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            data: oData,
            cache: false,
            success: function (response) {
                $('#input-searchresult-pembetulanke').val(response.Versi);
                $('#input-searchresult-taxperiod').val(response.NamaMasaPajak + ' - ' + response.TahunPajak);

                dataSpmToBind = [];

                if (response.aaData.length > 0) {
                    var dats = response.aaData;
                    for (var i = 0; i < dats.length; i++) {
                        var datToPush = {
                            VSequenceNumber: dats[i].VSequenceNumber,
                            KdJenisTransaksi: dats[i].KdJenisTransaksi,
                            FormatedNoFaktur: dats[i].FormatedNoFaktur,
                            MasaPajakName: dats[i].MasaPajakName,
                            TahunPajak: dats[i].TahunPajak,
                            TglFakturString: dats[i].TglFakturString,
                            FormatedNpwpPenjual: dats[i].FormatedNpwpPenjual,
                            NamaPenjual: dats[i].NamaPenjual,
                            AlamatPenjual: dats[i].AlamatPenjual,
                            FormatedNpwpLawanTransaksi: dats[i].FormatedNpwpLawanTransaksi,
                            NamaLawanTransaksi: dats[i].NamaLawanTransaksi,
                            AlamatLawanTransaksi: dats[i].AlamatLawanTransaksi,
                            JumlahDppString: dats[i].JumlahDppString,
                            JumlahPpnString: dats[i].JumlahPpnString,
                            JumlahPpnBmString: dats[i].JumlahPpnBmString,
                            KeteranganTambahan: dats[i].KeteranganTambahan,
                            FgUangMukaString: dats[i].FgUangMukaString,
                            UangMukaDPPString: dats[i].UangMukaDPPString,
                            UangMukaPPNString: dats[i].UangMukaPPNString,
                            UangMukaPPnBMString: dats[i].UangMukaPPnBMString,
                            Referensi: dats[i].Referensi,
                            FillingIndex: dats[i].FillingIndex,
                            FCode: dats[i].FCode,
                            NPWPPenjual: dats[i].NPWPPenjual,
                            FgPengganti: dats[i].FgPengganti,
                            NoFakturPajak: dats[i].NoFakturPajak,
                            TglFaktur: dats[i].TglFaktur,
                            NPWPLawanTransaksi: dats[i].NPWPLawanTransaksi,
                            JumlahDPP: dats[i].JumlahDPP,
                            JumlahPPN: dats[i].JumlahPPN,
                            JumlahPPNBM: dats[i].JumlahPPNBM,
                            FgUangMuka: dats[i].FgUangMuka,
                            UangMukaDPP: dats[i].UangMukaDPP,
                            UangMukaPPN: dats[i].UangMukaPPN,
                            UangMukaPPnBM: dats[i].UangMukaPPnBM,
                            CreatedBy: dats[i].CreatedBy,
                            ModifiedBy: dats[i].ModifiedBy,
                            CreatedString: dats[i].CreatedString,
                            ModifiedString: dats[i].ModifiedString,
                            MasaPajak: dats[i].MasaPajak
                        };

                        dataSpmToBind.push(datToPush);
                    }
                }

                var tbl = new ReportSpmTable();
                tbl.init();

            },
            error: function (xhr, textStatus, errorThrown) {
                App.DialogError(xhr, textStatus, errorThrown);
            }
        });
    }

    var dataSpmToBind = [];

    var ReportSpmTable = function () {
        return {

            initTable: function () {
                var dataset = dataSpmToBind;

                if ($.fn.DataTable.isDataTable('#tbl-report-spm')) {
                    $('#tbl-report-spm').DataTable().destroy();
                }

                $('#tbl-report-spm').dataTable({
                    "stateSave": false,
                    "bLengthChange": true,
                    "iDisplayLength": 10,
                    "aLengthMenu": [[10, 20, 50, 100], [10, 20, 50, 100]],
                    "data": dataset,
                    "autoWidth": false,
                    "scrollY": '375px',
                    "scrollX": true,
                    "scrollCollapse": true,
                    "initComplete": function () {
                        $(".dataTables_scrollBody th").removeAttr('class');
                    },
                    "columns": [
                        { "data": "VSequenceNumber", "orderable": true, "searchable": false },
                        { "data": "KdJenisTransaksi", "orderable": false, "searchable": false },
                        { "data": "FormatedNoFaktur", "orderable": false, "searchable": false },
                        { "data": "MasaPajakName", "orderable": false, "searchable": false },
                        { "data": "TahunPajak", "orderable": false, "searchable": false },
                        { "data": "TglFakturString", "orderable": false, "searchable": false },
                        { "data": "FormatedNpwpPenjual", "orderable": false, "searchable": false },
                        { "data": "NamaPenjual", "orderable": false, "searchable": false },
                        { "data": "AlamatPenjual", "orderable": false, "searchable": false },
                        { "data": "FormatedNpwpLawanTransaksi", "orderable": false, "searchable": false },
                        { "data": "NamaLawanTransaksi", "orderable": false, "searchable": false },
                        { "data": "AlamatLawanTransaksi", "orderable": false, "searchable": false },
                        { "data": "JumlahDppString", "orderable": false, "searchable": false },
                        { "data": "JumlahPpnString", "orderable": false, "searchable": false },
                        { "data": "JumlahPpnBmString", "orderable": false, "searchable": false },
                        { "data": "KeteranganTambahan", "orderable": false, "searchable": false },
                        { "data": "FgUangMukaString", "orderable": false, "searchable": false },
                        { "data": "UangMukaDPPString", "orderable": false, "searchable": false },
                        { "data": "UangMukaPPNString", "orderable": false, "searchable": false },
                        { "data": "UangMukaPPnBMString", "orderable": false, "searchable": false },
                        { "data": "Referensi", "orderable": false, "searchable": false },
                        { "data": "FillingIndex", "orderable": false, "searchable": false }
                    ],
                    "order": [0, "asc"],
                    "sDom": "<<'col-sm-6' <'refresh pull-left m-r-sm'>><'col-sm-6'>r><'table-scrollable't><'row m-t-sm m-b-xs'<'col-sm-3 m-t-n-sm'l><'col-sm-3 m-t-xs'i><'col-sm-6'p>>",
                    "sPaginationType": "simple_numbers"
                });

            },
            initHandlers: function () {
                $('#tbl-report-spm').on('draw.dt', function () {                 
                    $(".dataTables_scrollBody th").removeAttr('class');
                });
              
            },

            init: function () {
                this.initTable();
                this.initHandlers();
            }
        };
    };

    $('#input-search-masapajak').change(function () {
        var dRdType = $('input[name=manuallookup]:checked').val();
        var isOpen = dRdType == "normal";
        var selectedMonth = $('#input-search-masapajak option:selected').val();
        loadTahunPajak(selectedMonth, isOpen);
    });

    function loadMasaPajak(isOpen) {
        var jsonData = JSON.stringify({ isOpen: isOpen });
        $('#input-search-masapajak option').remove();
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMasaPajak", "Master")',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            data: jsonData,
            cache: false,
            success: function (response) {

                if (response.aaData.length > 0) {
                    var htmlSelect = '';
                    for (var i = 0; i < response.aaData.length; i++) {
                        htmlSelect = htmlSelect + '<option value="' + response.aaData[i].Value + '">' + response.aaData[i].Text + '</option>';
                    }
                    $('#input-search-masapajak').append(htmlSelect);
                }
                var selectedMonth = $('#input-search-masapajak option:selected').val();
                loadTahunPajak(selectedMonth, isOpen);
            },
            error: function (xhr, textStatus, errorThrown) {
                App.DialogError(xhr, textStatus, errorThrown);
            }
        });
    }

    function loadTahunPajak(aMonth, isOpen) {
        var url = isOpen ? "@Url.Action("GetOpenTahunPajakByMasaPajak", "Master")" : "@Url.Action("GetCloseTahunPajakByMasaPajak", "Master")";
        $('#input-search-tahunpajak option').remove();
        var jsonData = JSON.stringify({ masaPajak: aMonth });
        $.ajax({
            type: "POST",
            url: url,
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            data: jsonData,
            cache: false,
            success: function (response) {

                if (response.aaData.length > 0) {
                    var htmlSelect = '';
                    for (var i = 0; i < response.aaData.length; i++) {
                        htmlSelect = htmlSelect + '<option value="' + response.aaData[i].Year + '">' + response.aaData[i].Year + '</option>';
                    }
                    $('#input-search-tahunpajak').append(htmlSelect);
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                App.DialogError(xhr, textStatus, errorThrown);
            }
        });

    }

</script>